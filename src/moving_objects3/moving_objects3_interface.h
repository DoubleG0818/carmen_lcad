
#ifndef _CARMEN_FAST_POLAR_SLAM_INTERFACE_H_
#define _CARMEN_FAST_POLAR_SLAM_INTERFACE_H_

#ifdef __cplusplus
extern "C" 
{
#endif

	#include <carmen/fast_polar_slam_messages.h>

	void carmen_fast_polar_slam_subscribe_best_particle_message(carmen_fast_polar_slam_best_particle_message *message,
		carmen_handler_t handler, carmen_subscribe_t subscribe_how);
	void carmen_fast_polar_slam_publish_best_particle_message(carmen_fast_polar_slam_best_particle_message *message);
	void carmen_fast_polar_slam_unsubscribe_best_particle_message(carmen_handler_t handler);


	void carmen_fast_polar_slam_subscribe_velodyne_projected_message(carmen_fast_polar_slam_velodyne_projected_on_ground_message *message,
		carmen_handler_t handler, carmen_subscribe_t subscribe_how);
	void carmen_fast_polar_slam_publish_velodyne_projected_message(carmen_fast_polar_slam_velodyne_projected_on_ground_message *message);
	void carmen_fast_polar_slam_unsubscribe_velodyne_projected_message(carmen_handler_t handler);


	void carmen_fast_polar_slam_subscribe_particles_message(carmen_fast_polar_slam_particles_message *message,
		carmen_handler_t handler, carmen_subscribe_t subscribe_how);
	void carmen_fast_polar_slam_publish_particles_message(carmen_fast_polar_slam_particles_message *message);
	void carmen_fast_polar_slam_unsubscribe_particles_message(carmen_handler_t handler);


	void carmen_fast_polar_slam_subscribe_measurement_model_message(carmen_fast_polar_slam_measurement_model_message *message,
		carmen_handler_t handler, carmen_subscribe_t subscribe_how);
	void carmen_fast_polar_slam_publish_measurement_model_message(carmen_fast_polar_slam_measurement_model_message *message);
	void carmen_fast_polar_slam_unsubscribe_measurement_model_message(carmen_handler_t handler);


	void carmen_fast_polar_slam_define_messages();

#ifdef __cplusplus
}
#endif
#endif
// @}

