#include "SampleFilter.h"

static double filter_taps[SAMPLEFILTER_TAP_NUM] = {
  -0.00527641662206894,
  -0.0025058128713441284,
  -0.0030136238049375324,
  -0.0035184815623492726,
  -0.003998551582740363,
  -0.0044308181688575326,
  -0.004788845470590836,
  -0.005046039481750507,
  -0.005176063733580603,
  -0.005150421343397102,
  -0.004942772280441883,
  -0.004526374503643374,
  -0.0038768006716494215,
  -0.0029783497296080397,
  -0.0018171853902693936,
  -0.00038548303573217026,
  0.001323743377452876,
  0.0033095757631147198,
  0.005554491761107369,
  0.008041695896920638,
  0.010762334951546049,
  0.013666221949525856,
  0.01673223665318714,
  0.019910715758669723,
  0.02315641965689029,
  0.026418591019511207,
  0.029643216238063888,
  0.03277605848148031,
  0.035762226853682993,
  0.038546257722002174,
  0.041077592183312465,
  0.04330990020845525,
  0.045198247155764405,
  0.0467090205534961,
  0.04780760638961473,
  0.048476765395414775,
  0.04870247545360285,
  0.048476765395414775,
  0.04780760638961473,
  0.0467090205534961,
  0.045198247155764405,
  0.04330990020845525,
  0.041077592183312465,
  0.038546257722002174,
  0.035762226853682993,
  0.03277605848148031,
  0.029643216238063888,
  0.026418591019511207,
  0.02315641965689029,
  0.019910715758669723,
  0.01673223665318714,
  0.013666221949525856,
  0.010762334951546049,
  0.008041695896920638,
  0.005554491761107369,
  0.0033095757631147198,
  0.001323743377452876,
  -0.00038548303573217026,
  -0.0018171853902693936,
  -0.0029783497296080397,
  -0.0038768006716494215,
  -0.004526374503643374,
  -0.004942772280441883,
  -0.005150421343397102,
  -0.005176063733580603,
  -0.005046039481750507,
  -0.004788845470590836,
  -0.0044308181688575326,
  -0.003998551582740363,
  -0.0035184815623492726,
  -0.0030136238049375324,
  -0.0025058128713441284,
  -0.00527641662206894
};

void SampleFilter_init(SampleFilter* f) {
  int i;
  for(i = 0; i < SAMPLEFILTER_TAP_NUM; ++i)
    f->history[i] = 0;
  f->last_index = 0;
}

void SampleFilter_put(SampleFilter* f, double input) {
  f->history[f->last_index++] = input;
  if(f->last_index == SAMPLEFILTER_TAP_NUM)
    f->last_index = 0;
}

double SampleFilter_get(SampleFilter* f) {
  double acc = 0;
  int index = f->last_index, i;
  for(i = 0; i < SAMPLEFILTER_TAP_NUM; ++i) {
    index = index != 0 ? index-1 : SAMPLEFILTER_TAP_NUM-1;
    acc += f->history[index] * filter_taps[i];
  };
  return acc;
}
