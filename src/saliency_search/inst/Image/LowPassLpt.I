/*               -*- mode: c++ -*-

   DO NOT EDIT THIS FILE -- CHANGES WILL BE LOST!

   [Wed Dec 12 08:54:47 BRST 2012] This file was automatically generated by
   applying the script "./devscripts/extract_templates.tcl" to the template
   declarations in source file "src/Image/LowPassLpt.H" for types [byte,
   float]
*/
#ifndef INST_CLASS
#  define INST_CLASS
#endif
#ifdef INST_NAMESPACE
namespace INST_NAMESPACE {
#endif
template Image< promote_trait<byte, float>::TP> INST_CLASS lowPassLpt(const Image<byte>& src, const uint taps , const BorderPolicy policy );
template Image< promote_trait< PixRGB<byte> , float>::TP> INST_CLASS lowPassLpt(const Image< PixRGB<byte> >& src, const uint taps , const BorderPolicy policy );
template Image< promote_trait<float, float>::TP> INST_CLASS lowPassLpt(const Image<float>& src, const uint taps , const BorderPolicy policy );
template Image< promote_trait< PixRGB<float> , float>::TP> INST_CLASS lowPassLpt(const Image< PixRGB<float> >& src, const uint taps , const BorderPolicy policy );
template Image< promote_trait<byte, float>::TP> INST_CLASS lowPassLpt3(const Image<byte>& src, const BorderPolicy policy );
template Image< promote_trait< PixRGB<byte> , float>::TP> INST_CLASS lowPassLpt3(const Image< PixRGB<byte> >& src, const BorderPolicy policy );
template Image< promote_trait<float, float>::TP> INST_CLASS lowPassLpt3(const Image<float>& src, const BorderPolicy policy );
template Image< promote_trait< PixRGB<float> , float>::TP> INST_CLASS lowPassLpt3(const Image< PixRGB<float> >& src, const BorderPolicy policy );
template Image< promote_trait<byte, float>::TP> INST_CLASS lowPassLpt3r(const Image<byte>& src);
template Image< promote_trait< PixRGB<byte> , float>::TP> INST_CLASS lowPassLpt3r(const Image< PixRGB<byte> >& src);
template Image< promote_trait<float, float>::TP> INST_CLASS lowPassLpt3r(const Image<float>& src);
template Image< promote_trait< PixRGB<float> , float>::TP> INST_CLASS lowPassLpt3r(const Image< PixRGB<float> >& src);
template Image< promote_trait<byte, float>::TP> INST_CLASS lowPassLpt3w(const Image<byte>& src);
template Image< promote_trait< PixRGB<byte> , float>::TP> INST_CLASS lowPassLpt3w(const Image< PixRGB<byte> >& src);
template Image< promote_trait<float, float>::TP> INST_CLASS lowPassLpt3w(const Image<float>& src);
template Image< promote_trait< PixRGB<float> , float>::TP> INST_CLASS lowPassLpt3w(const Image< PixRGB<float> >& src);
template Image< promote_trait<byte, float>::TP> INST_CLASS lowPassLpt5(const Image<byte>& src, const BorderPolicy policy );
template Image< promote_trait< PixRGB<byte> , float>::TP> INST_CLASS lowPassLpt5(const Image< PixRGB<byte> >& src, const BorderPolicy policy );
template Image< promote_trait<float, float>::TP> INST_CLASS lowPassLpt5(const Image<float>& src, const BorderPolicy policy );
template Image< promote_trait< PixRGB<float> , float>::TP> INST_CLASS lowPassLpt5(const Image< PixRGB<float> >& src, const BorderPolicy policy );
template Image< promote_trait<byte, float>::TP> INST_CLASS lowPassLpt5r(const Image<byte>& src);
template Image< promote_trait< PixRGB<byte> , float>::TP> INST_CLASS lowPassLpt5r(const Image< PixRGB<byte> >& src);
template Image< promote_trait<float, float>::TP> INST_CLASS lowPassLpt5r(const Image<float>& src);
template Image< promote_trait< PixRGB<float> , float>::TP> INST_CLASS lowPassLpt5r(const Image< PixRGB<float> >& src);
template Image< promote_trait<byte, float>::TP> INST_CLASS lowPassLpt5w(const Image<byte>& src);
template Image< promote_trait< PixRGB<byte> , float>::TP> INST_CLASS lowPassLpt5w(const Image< PixRGB<byte> >& src);
template Image< promote_trait<float, float>::TP> INST_CLASS lowPassLpt5w(const Image<float>& src);
template Image< promote_trait< PixRGB<float> , float>::TP> INST_CLASS lowPassLpt5w(const Image< PixRGB<float> >& src);
#ifdef INST_NAMESPACE
}
#endif
