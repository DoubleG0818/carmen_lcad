/*               -*- mode: c++ -*-

   DO NOT EDIT THIS FILE -- CHANGES WILL BE LOST!

   [Wed Dec 12 08:54:55 BRST 2012] This file was automatically generated by
   applying the script "./devscripts/extract_templates.tcl" to the template
   declarations in source file "src/Image/MatrixOps.H" for types [byte,
   float]
*/
#ifndef INST_CLASS
#  define INST_CLASS
#endif
#ifdef INST_NAMESPACE
namespace INST_NAMESPACE {
#endif
template Image< promote_trait<byte,byte>::TP> INST_CLASS vmMult(const Image<byte>& v, const Image<byte>& M);
template Image< promote_trait<float,float>::TP> INST_CLASS vmMult(const Image<float>& v, const Image<float>& M);
template Image< promote_trait<byte,byte>::TP> INST_CLASS matrixMult(const Image<byte>& A, const Image<byte>& B);
template Image< promote_trait<float,float>::TP> INST_CLASS matrixMult(const Image<float>& A, const Image<float>& B);
template Image< promote_trait<byte,byte>::TP> INST_CLASS matrixMult(const Image<byte>& A, const Image<byte>& B, const uint beginAX, const uint endAX, const uint beginBX, const uint endBX, const uint beginAY, const uint endAY);
template Image< promote_trait<float,float>::TP> INST_CLASS matrixMult(const Image<float>& A, const Image<float>& B, const uint beginAX, const uint endAX, const uint beginBX, const uint endBX, const uint beginAY, const uint endAY);
template Image<byte> INST_CLASS transpose(const Image<byte>& M);
template Image< PixRGB<byte> > INST_CLASS transpose(const Image< PixRGB<byte> >& M);
template Image<float> INST_CLASS transpose(const Image<float>& M);
template Image< PixRGB<float> > INST_CLASS transpose(const Image< PixRGB<float> >& M);
template Image<byte> INST_CLASS flipHoriz(const Image<byte>& img);
template Image< PixRGB<byte> > INST_CLASS flipHoriz(const Image< PixRGB<byte> >& img);
template Image<float> INST_CLASS flipHoriz(const Image<float>& img);
template Image< PixRGB<float> > INST_CLASS flipHoriz(const Image< PixRGB<float> >& img);
template Image<byte> INST_CLASS flipVertic(const Image<byte>& img);
template Image< PixRGB<byte> > INST_CLASS flipVertic(const Image< PixRGB<byte> >& img);
template Image<float> INST_CLASS flipVertic(const Image<float>& img);
template Image< PixRGB<float> > INST_CLASS flipVertic(const Image< PixRGB<float> >& img);
template Image<byte> INST_CLASS eye(const uint size);
template Image<float> INST_CLASS eye(const uint size);
template promote_trait<byte,byte>::TP INST_CLASS trace(const Image<byte>& M);
template promote_trait<float,float>::TP INST_CLASS trace(const Image<float>& M);
template int INST_CLASS matrixPivot(Image<byte>& M, const int y);
template int INST_CLASS matrixPivot(Image<float>& M, const int y);
template Image< promote_trait<byte, float>::TP> INST_CLASS matrixInv(const Image<byte>& M);
template Image< promote_trait<float, float>::TP> INST_CLASS matrixInv(const Image<float>& M);
template promote_trait<byte,byte>::TP INST_CLASS dotprod(const Image<byte>& A, const Image<byte>& B);
template promote_trait<float,float>::TP INST_CLASS dotprod(const Image<float>& A, const Image<float>& B);
template promote_trait<byte,float>::TP INST_CLASS matrixDet(const Image<byte>& M);
template promote_trait<float,float>::TP INST_CLASS matrixDet(const Image<float>& M);
#ifdef INST_NAMESPACE
}
#endif
