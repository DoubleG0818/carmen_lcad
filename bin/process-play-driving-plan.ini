# Este arquivo ee usado como entrada do programa bin/proccontrol.
# Quando proccontrol ee invocado (central precisa estar rodando), 
# ele inicia os modulos listados.
#
# Cada modulo pode pertencer a um grupo. O programa bin/proccontrol_gui (este
# programa requer a instalacao de Carmen com o pacote Qt 3.3 (nao default)) 
# pode parar ou iniciar todo um grupo ou cada modulo individualmente.
# O programa proccontrol_gui pode, ainda, examinar ou nao a saida de cada
# modulo que esteja rodando.
# 
# Agrupamentos pode ser usados para facilitar testes de funcionalidades.
#
# O exemplo abaixo ee uma entrada de proccontrol que pede ao mesmo para
# fazer o equivalente ao demandado pelo antigo script run_all.bat.
# Voce pode invocar proccontrol no terminal passando um arquivo como
# este como parametro (./proccontrol process.ini) sem coloca-lo 
# (proccontrol) em background. Apos fazer isso, com um crtl+c voce
# "mata" todos os processos (o ctrl+c ee equivalente ao all_stop.bat)
#
# Se proccontrol ee invocado sem paremetros, ele procura o arquivo
# process.ini no diretorio corrente. Se ele nao achar, ele procura
# o mesmo arquivo no diretorio ../race/src/ Se ainda assim ele nao
# achar, ele termina com o erro:
# "Error: could not open process file ../race/src/process.ini"
#
# Se, no exemplo abaixo, requested_state for igual a 1 (verdadeiro), 
# quando proccontrol ee invocado o modulo ee iniciado automaticamente.
# Se watch_heartbeats for igual a 1 (verdadeiro), proccontrol vai monitorar
# se o modulo esta "vivo"; isto ee, vai verificar se o modulo esta enviando
# mensagens do tipo carmen_heartbeat_message periodicamente; isso pode	
# ser feito por meio da funccao carmen_publish_heartbeat(char *module_name).
# Se o modulo nao enviar, ele ee morto (killed) e reiniciado (enquanto
# persistir a falta de "heartbeats"). Os modulos robot e simulator enviam
# hartbeats, por exemplo.
# 
# Em um situacao de uso normal, o usuario abriria tres terminais:
# no primeiro executaria o central (isso precisa ser feito apenas 
# uma vez); no segundo, proccontrol xxx.ini; e no terceiro, proccontrol_gui,
# caso queira um controle mais fino sobre os processos sendo executados.
# Existem outros programas associados a proccontrol (proccontrol_setgroup,
# proccontrol_setmodule, proccontrol_viewoutput e watchdog) que nao foram 
# tratados aqui.
#
# Exemplo de entrada de proccontrol:
#module name 		group_name	requested_state	watch_heartbeats	command_line
#### Serviccos de suporte
 param_daemon		support 	1		0			./param_daemon ../src/carmen-ford-escape.ini
 proc_control		support		1		0			./proccontrol_gui
 map_server		support		1		0			./map_server -map_path ../data/map_volta_da_ufes-20121003-01 -map_x 7757721.8 -map_y -363569.5 -block_map on


#### Carro
 simulator 		support 	1		0			./simulator_ackerman

## Localize
 localize		localize	1		0			./localize_ackerman
 fused_odometry		localize	1		0			./fused_odometry

#### SLAM
 mapper			SLAM		1		0			./mapper -map_path ../data/mapper_teste -map_x 7756450 -map_y -364200


#### Hierarquia de controle (top-down)
 rndf			planner		0		0			./rddf_play ../data/rndf/rndf_log_voltadaufes-20121003-01.kml
 driving_playback	planner		1		0			./driving_playback_play -file driving_plan.txt
 behavior_selector	planner		1		0			./behavior_selector
 navigator		planner		1		0			./navigator_ackerman
 rrt			planner		1		0			./rrt_planner
 rrt_path_follower	planner		1		0			./rrt_path_follower
 motion_planner		planner		1		0			./motion_planner
 obstacle_avoider	planner		1		0			./obstacle_avoider


#### Interfaces
 robot_gui 		interface	1		0			./robot_ackerman_gui
 navigator_gui		interface	1		0			./navigator_gui -map_path ../data/map_volta_da_ufes -map_x 7756450 -map_y -364200

