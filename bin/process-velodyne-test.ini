# Este arquivo ee usado como entrada do programa bin/proccontrol.
# Quando proccontrol ee invocado (central precisa estar rodando), 
# ele inicia os modulos listados.
#
# Cada modulo pode pertencer a um grupo. O programa bin/proccontrol_gui (este
# programa requer a instalacao de Carmen com o pacote Qt 3.3 (nao default)) 
# pode parar ou iniciar todo um grupo ou cada modulo individualmente.
# O programa proccontrol_gui pode, ainda, examinar ou nao a saida de cada
# modulo que esteja rodando.
# 
# Agrupamentos pode ser usados para facilitar testes de funcionalidades.
#
# O exemplo abaixo ee uma entrada de proccontrol que pede ao mesmo para
# fazer o equivalente ao demandado pelo antigo script run_all.bat.
# Voce pode invocar proccontrol no terminal passando um arquivo como
# este como parametro (./proccontrol process.ini) sem coloca-lo 
# (proccontrol) em background. Apos fazer isso, com um crtl+c voce
# "mata" todos os processos (o ctrl+c ee equivalente ao all_stop.bat)
#
# Se proccontrol ee invocado sem paremetros, ele procura o arquivo
# process.ini no diretorio corrente. Se ele nao achar, ele procura
# o mesmo arquivo no diretorio ../race/src/ Se ainda assim ele nao
# achar, ele termina com o erro:
# "Error: could not open process file ../race/src/process.ini"
#
# Se, no exemplo abaixo, requested_state for igual a 1 (verdadeiro), 
# quando proccontrol ee invocado o modulo ee iniciado automaticamente.
# Se watch_heartbeats for igual a 1 (verdadeiro), proccontrol vai monitorar
# se o modulo esta "vivo"; isto ee, vai verificar se o modulo esta enviando
# mensagens do tipo carmen_heartbeat_message periodicamente; isso pode
# ser feito por meio da funccao carmen_publish_heartbeat(char *module_name).
# Se o modulo nao enviar, ele ee morto (killed) e reiniciado (enquanto
# persistir a falta de "heartbeats"). Os modulos robot e simulator enviam
# hartbeats, por exemplo.
# 
# Em um situacao de uso normal, o usuario abriria tres terminais:
# no primeiro executaria o central (isso precisa ser feito apenas 
# uma vez); no segundo, proccontrol xxx.ini; e no terceiro, proccontrol_gui,
# caso queira um controle mais fino sobre os processos sendo executados.
# Existem outros programas associados a proccontrol (proccontrol_setgroup,
# proccontrol_setmodule, proccontrol_viewoutput e watchdog) que nao foram 
# tratados aqui.

#Configuração de Rede do Computador para usar com o Nosso Velodyne velho (IP: 192.168.3.44):
#IP: 192.168.3.45
#Mask: 255.255.255.0
#Gateway: 192.168.3.45 (próprio computador, igual ao IP)
#
#Configuração de Rede do Computador para usar com o Nosso Velodyne novo (IP: 192.168.1.201):
#IP: 192.168.1.71
#Mask: 255.255.255.0
#Gateway: 192.168.1.201 (próprio computador, igual ao IP)
#
#Obs: deixar os campos de DNS vazios
#
# Para usar com o Novo Velodyne é só alterar a configuração de rede, para que o IP e o Gateway do Computador fiquem 
# na mesma rede do IP do Novo Velodyne, por exemplo: Se o IP do Novo Velodyne for 192.168.0.5, o IP e o Gateway da sua máquina
# deverá ser 192.168.0.6.

# Exemplo de entrada de proccontrol:
#module name 			group_name	requested_state	watch_heartbeats	command_line
 param_daemon 			support 		1		0			./param_daemon ../src/carmen-ford-escape.ini
 proccontrol_gui		support 		1		0			./proccontrol_gui
 velodyne			sensors			1		0			./velodyne
 carmen_viewer			monitors		1		0			./cvis
